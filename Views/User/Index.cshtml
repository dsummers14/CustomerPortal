@using b2c_ms_graph;
@using System.Security.Claims

@{
    ViewBag.Title = "Users";
    var gcustomerNumber = ClaimsPrincipal.Current.Claims.Where(w => w.Type == "extension_CustomerNumber").Select(s => s.Value).FirstOrDefault();
    var gwebRole = ClaimsPrincipal.Current.Claims.Where(w => w.Type == "extension_WebRole").Select(s => s.Value).FirstOrDefault();
    bool filterCustomer = (gwebRole != "1");
}

<h2>Users</h2>
<div class="container-fluid">
    <div class="row">
        <div class="col-xs-18 col-md-12">
            @(Html.Kendo().Grid<UserModel>
        ()
        .Name("grid")
        .Editable(e => e.Mode(GridEditMode.InLine))
         .ToolBar(t => t.Custom().Text("Add User").Action("CreateUser", "User"))
        .Columns(columns =>
        {
            columns.Bound(p => p.Id).Visible(false);
            columns.Bound(p => p.DisplayName);
            columns.Bound(p => p.extension_39d2bd21d67b480891ffa985c6eb1398_TenantId).Title("Tenant Id").Visible(!filterCustomer);
            columns.Bound(p => p.extension_39d2bd21d67b480891ffa985c6eb1398_CompanyId).Title("CompanyId").Visible(!filterCustomer);
            columns.Bound(p => p.extension_39d2bd21d67b480891ffa985c6eb1398_WebRole).Title("Web Role").Visible(!filterCustomer);
            columns.Bound(p => p.extension_39d2bd21d67b480891ffa985c6eb1398_CustomerNumber).Title("Customer Number").Visible(!filterCustomer);
            columns.Command(c =>
            {
                c.Edit();
                c.Destroy();
            });
        })
        .Pageable()
        .Sortable()
        .Scrollable()
        .Filterable()
        .HtmlAttributes(new { style = "height:550px;" })
        .DataSource(dataSource => dataSource
        .Custom()
        .Sort(s => s.Add("DisplayName"))
        .Filter(f =>
        {
            if (filterCustomer)
            {
                f.Add(a => a.extension_39d2bd21d67b480891ffa985c6eb1398_CustomerNumber).IsEqualTo(gcustomerNumber);
            }
        })
        .Type("odata-v4")
        .Transport(transport =>
        {
            transport.Read(read => read.Url("/oData/Users"));
            transport.Update(update => update.Url("/oData/Users/PutUser"));
            transport.Destroy(new
            {
                url = new Kendo.Mvc.ClientHandlerDescriptor
                {
                    HandlerName = @"function(data) {return '/User/DeleteUser/' + data.Id ;}"
                }
            });

        })
        .Schema(s =>
            s.Model(m =>
            {
                m.Id(i => i.Id);
                m.Field(f => f.DisplayName).Editable(true);
                m.Field(f => f.extension_39d2bd21d67b480891ffa985c6eb1398_CustomerNumber).Editable(true);
                m.Field(f => f.extension_39d2bd21d67b480891ffa985c6eb1398_TenantId).Editable(true);
            })
        )
        .Events(e =>
        {
            e.Error("error_handler");
            e.RequestEnd("requestend");
        })
        .PageSize(20)
        .ServerPaging(true)
        .ServerSorting(true)
        .ServerFiltering(true)
        )
    ))
        </div>
    </div>
</div>

<script type="text/javascript">
    function requestend(e) {
        if (e.type != "read") {
            this.read();
        }
    }

    function error_handler(e) {
        if (e.errors) {
            var message = "Errors:\n";
            $.each(e.errors, function (key, value) {
                if ('errors' in value) {
                    $.each(value.errors, function () {
                        message += this + "\n";
                    });
                }
            });
            alert(message);
        }
    }


    function onDetailsClick(e) {
        e.preventDefault();
        var UserProfile = this.dataItem($(e.currentTarget).closest("tr"));

        window.location.href = '@Url.Action("Details","UserProfile")' + "?UserID=" + UserProfile.UserID;
    }

</script>
