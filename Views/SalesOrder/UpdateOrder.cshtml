@model CustomerPortal.salesOrderModel

@using System.Security.Claims;

@{
    ViewBag.Title = "Update Order";

    var gcustomerNumber = ClaimsPrincipal.Current.Claims.Where(w => w.Type == "extension_CustomerNumber").Select(s => s.Value).FirstOrDefault();
    var gwebRole = ClaimsPrincipal.Current.Claims.Where(w => w.Type == "extension_WebRole").Select(s => s.Value).FirstOrDefault();
    Boolean filterCustomer = (gwebRole != "1");

}


    <div class="demo-section k-content">
        <h3>Update Sales Order</h3>

        @Html.ValidationSummary(true)

        @(Html.Kendo().Form<CustomerPortal.salesOrderModel>()
        .Name("SalesOrder")
        .HtmlAttributes(new { action = "", method = "POST" })
        .Validatable(v =>
        {
            v.ValidationSummary(vs => vs.Enable(true));
        })
        .Orientation("vertical")
        .Layout("grid")
        .Grid(g => g.Cols(2).Gutter(20))
        .ButtonsTemplate("<button class='k-button k-primary k-form-submit' type='submit'>Submit</button><button class='k-button k-primary k-form-clear'>Cancel</button>")
        .Events(ev => ev.Clear("onFormClear"))
        .Items(items =>
        {
            items.AddGroup()
                 .Label("General")
                 .Items(i =>
                 {
                     i.Add()
                      .Field(f => f.number)
                      .Label(l => l.Text("Order Number"))
                      .EditorTemplateHandler("setOrderNumberEditor");
                  
                     i.Add()
                      .Field(f => f.customerNumber)
                      .Label(l => l.Text("Sell-to Customer"))
                      .Editor(e =>
                      {e.ComboBox()
                        .Name("customerNumber")
                        .DataTextField("displayName")
                        .DataValueField("number")
                        .HtmlAttributes(new { style = "width:100%" })
                        .AutoBind(true)
                        .DataSource(s => s.Read(r => r.Action("GetCustomers", "Customer")).ServerFiltering(true));
                      });

                     i.Add()
                      .Field(f => f.externalDocumentNumber)
                      .Label(l => l.Text("External Order Number"));

                     i.Add()
                      .Field(f => f.orderDateTime)
                      .Label(l => l.Text("Order Date"))
                      .Editor(e =>
                      {
                          e.DatePicker()
                           .Name("orderDateTime");
                      });
                 });
            items.AddGroup()
                 .Label("Shipping Info")
                 .Items(i =>
                 {
                     i.Add()
                      .Field(f => f.requestedDeliveryDateTime)
                      .Label(l => l.Text("Requested Delivery Date"))
                      .Editor(e =>
                      {
                          e.DatePicker();
                      });

                     i.Add()
                      .Field(f => f.shipToContact)
                      .Label(l => l.Text("Ship-to Contact"));

                     i.Add()
                      .Field(f => f.shipToName)
                      .Label(l => l.Text("Ship-to Name"));

                     i.Add()
                      .Field(f => f.shippingPostalAddress.street)
                      .Label(l => l.Text("Ship-to Street"));

                     i.Add()
                      .Field(f => f.shippingPostalAddress.city)
                      .Label(l => l.Text("Ship-to City"));

                     i.Add()
                      .Field(f => f.shippingPostalAddress.state)
                      .Label(l => l.Text("Ship-to State"));

                     i.Add()
                      .Field(f => f.shippingPostalAddress.postalCode)
                      .Label(l => l.Text("Ship-to Postal Code"));

                     i.Add()
                     .Field(f => f.id)
                     .Label(l => l.Text(" "))
                     .EditorTemplateHandler("setIdEditor");
                 });

        })

    )
        <br />
        <h4>Sales Order Lines</h4>
        @Html.Partial("_OrderLinesGrid",Model)
       

    </div>

    <script>
        function onFormClear(e)
        {
           e.preventDefault();
           window.location.href = '@Url.Action("Index", "SalesOrder")';
        }

        function setIdEditor(container, options) {
            container.append($("<input type='hidden' id='id' name='id'>"));
        }
        
        function setOrderNumberEditor(container, options) {
            container.append($("<input type='text' disabled id='number' name='number'>"));
        }

    </script>