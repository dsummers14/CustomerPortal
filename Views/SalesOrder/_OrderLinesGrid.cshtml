@(Html.Kendo().Grid<salesOrderLineModel>
    ()
    .Name("OrderLines")
    .ToolBar(t => { t.Create().Text("Add Order Line"); })
    .Columns(columns =>
    {
        columns.Bound(l => l.documentId).Hidden(true) ;
        columns.Bound(l => l.itemNumber).Width(150).Title("Item No").EditorTemplateName("itemNumberLookup");
        columns.Bound(l => l.itemDescription).Width(200).Title("Description").EditorTemplateName("itemNameLookup"); ;
        columns.Bound(l => l.quantity).Width(75).Title("Quantity");
        columns.Bound(l => l.unitPrice).Format("{0:c}").Width(100).Title("Unit Price");
        columns.Bound(l => l.amountExcludingTax).Format("{0:c}").Title("Amount Excl Tax").Width(100);
        columns.Bound(l => l.amountIncludingTax).Format("{0:c}").Title("Amount Incl Tax").Width(100).Hidden(true);
        columns.Command(c => { c.Edit(); c.Destroy(); }).Width(125);
    })
    .Editable(e => e.Mode(GridEditMode.InLine).ConfirmDelete("Delete Line").DisplayDeleteConfirmation("Line Deletes"))
    .Pageable()
    .Sortable()
    .Scrollable()
    .HtmlAttributes(new { style = "height:550px;" })
    .DataSource(dataSource => dataSource
        .Ajax()
        .Model(model => {
            model.Id(m => m.id);
            model.Field(f => f.documentId).DefaultValue(Model.id.ToString());
            model.Field(f => f.itemNumber);
            model.Field(f => f.itemDescription);
            model.Field(f => f.quantity);
            model.Field(f => f.unitPrice);
            model.Field(f => f.amountIncludingTax).Editable(false);
            model.Field(f => f.amountExcludingTax).Editable(false);
        })
        .ServerOperation(false)
        .Read(read => read.Action("SalesOrderLines_Read", "SalesOrderLine", new {documentId = Model.id.ToString() }))
        .Create(create => create.Action("SalesOrderLine_Create", "SalesOrderLine", new {documentId = Model.id.ToString() }))
        .Update(update => update.Action("SalesOrderLine_Update", "SalesOrderLine"))
        .Destroy(delete => delete.Action("SalesOrderLine_Delete", "SalesOrderLine"))
        .PageSize(10)
        .Events(events => events.Error("error_handler"))
    )
)


@*@(Html.Kendo().Window() 
        .Name("ItemLookupWindow") 
        .Title("Item Lookup")
        .Visible(false) 
        .Resizable(r => r.Enabled(true)) 
        .Draggable(true) 
        .Content(
                  @<div>
                    @Html.Partial("_ItemLookupGrid");
                  </div>
                  )
    //.Render()
)*@

<script type="text/javascript">
    function error_handler(e) {
        if (e.errors) {
            var message = "Errors:\n";
            $.each(e.errors, function (key, value) {
                if ('errors' in value) {
                    $.each(value.errors, function () {
                        message += this + "\n";
                    });
                }
            });
            alert(message);
        }
    }

    function onSelectItemNo(e) {
        var thisItem = this.dataItem(e.item.index());

        var row = $(this.element).closest("tr");
        var grid = $("#OrderLines").data("kendoGrid");
        var dataItem = grid.dataItem(row);
        dataItem.set("itemDescription", thisItem.displayName);
        e.sender.close();
    }  

    function onSelectItemName(e) {
        var thisItem = this.dataItem(e.item.index());

        var row = $(this.element).closest("tr");
        var grid = $("#OrderLines").data("kendoGrid");
        var dataItem = grid.dataItem(row);
        dataItem.set("itemNumber", thisItem.itemNumber);
        e.sender.close();
    }  
    //function onItemLookup(e) {
    //    var row = $(this.element).closest("tr");
    //    var grid = $("#OrderLines").data("kendoGrid");
    //    orderLine = grid.dataItem(row);
    //    //cell = $('#OrderLines').find('tbody tr:eq(' + e.index + ') td:eq(1)');
    //    e.preventDefault();

    //    var wnd = $("#ItemLookupWindow").data("kendoWindow");
    //    wnd.center().open();
    //};


    //function ItemLookupAdd(e) {
    //    e.preventDefault();
    //    var Item = this.dataItem($(e.currentTarget).closest("tr"));

    //    ItemNo = Item.No;
    //    Description = Item.Description;

    //    var grid = $("#OrderLines").data("kendoGrid");
    //    grid.addRow();

    //    var wnd = $("#ItemLookupWindow").data("kendoWindow");
    //    wnd.center().close();
    //}

</script>
