@using System.Security.Claims

@{
    ViewBag.Title = "Customers";
    var gcustomerNumber = ClaimsPrincipal.Current.Claims.Where(w => w.Type == "extension_CustomerNumber").Select(s => s.Value).FirstOrDefault();
    var gwebRole = ClaimsPrincipal.Current.Claims.Where(w => w.Type == "extension_WebRole").Select(s => s.Value).FirstOrDefault();
    bool filterCustomer = (gwebRole != "1");
}

<h2>Customers</h2>
<div class="container-fluid">
    <div class="row">
        <div class="col-xs-18 col-md-12">
            @(Html.Kendo().Grid<Microsoft.NAV.customer>()
        .Name("grid")
        .Columns(columns =>
        {
            columns.Bound(p => p.number).Filterable(!filterCustomer);
            columns.Bound(p => p.displayName).Filterable(!filterCustomer);
            columns.Bound(p => p.lastModifiedDateTime).Format("{0:MM/dd/yyyy}").Filterable(!filterCustomer);
            columns.Bound(p => p.address.city).Filterable(false).Sortable(false);
            columns.Bound(p => p.address.state).Filterable(false).Sortable(false);
        })
        .Pageable()
        .Sortable()
        .Scrollable()
        .Filterable()
        .HtmlAttributes(new { style = "height:550px;" })
        .DataSource(dataSource => dataSource
        .Custom()
        .Sort(s => s.Add("number"))
        .Filter(f =>
            {
                if (filterCustomer)
                {
                    f.Add(a => a.number).IsEqualTo(gcustomerNumber);
                }
            })
        .Type("odata-v4")
        .Transport(transport =>
        {
            transport.Read(read => read.Url("/oData/Customers"));
        })
        .PageSize(20)
        .ServerPaging(true)
        .ServerSorting(true)
        .ServerFiltering(true)
        ))
        </div>
    </div>
</div>


